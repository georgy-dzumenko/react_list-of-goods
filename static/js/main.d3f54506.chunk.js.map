{"version":3,"sources":["GoodsList.js","App.js","index.js"],"names":["GoodsList","state","sortBy","reversed","goods","this","props","goodsFromServer","sort","thing1","thing2","length","localeCompare","reverse","type","onClick","setState","map","thing","key","React","Component","App","isStarted","ReactDOM","render","document","getElementById"],"mappings":"sNAIaA,EAAb,4MACEC,MAAQ,CACNC,OAAQ,GACRC,UAAU,GAHd,4CAME,WAAU,IAAD,OACDC,EAAK,YAAOC,KAAKC,MAAMC,iBAwC7B,OAnBAH,EAAMI,MACJ,SAACC,EAAQC,GACP,OAAQ,EAAKT,MAAMC,QACjB,IAAK,WACH,OAAOO,EAAOE,OAASD,EAAOC,OAEhC,IAAK,iBACH,OAAOF,EAAOG,cAAcF,GAE9B,QACE,OAAO,MAKXL,KAAKJ,MAAME,UACbC,EAAMS,UAIN,oCACE,4BACEC,KAAK,SACLC,QA1CU,WACd,EAAKC,UAAS,SAAAf,GAAK,MAAK,CAAEE,UAAWF,EAAME,eAuCzC,WAMA,4BACEW,KAAK,SACLC,QA5CqB,WACzB,EAAKC,SAAS,CAAEd,OAAQ,qBAyCtB,uBAMA,4BACEY,KAAK,SACLC,QAvCe,WACnB,EAAKC,SAAS,CAAEd,OAAQ,eAoCtB,kBAMA,4BACEY,KAAK,SACLC,QApDQ,WACZ,EAAKC,SAAS,CACZd,OAAQ,GACRC,UAAU,MA+CV,SAMA,4BACGC,EAAMa,KACL,SAAAC,GAAK,OAAI,wBAAIC,IAAKD,GAAQA,YA3EtC,GAA+BE,IAAMC,WCA/Bd,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8Bae,E,4MA1BbrB,MAAQ,CACNsB,WAAW,G,4CAGb,WAAU,IAAD,OAGP,OAFsBlB,KAAKJ,MAAnBsB,UAIF,kBAAC,EAAD,CAAWhB,gBAAiBA,IAE5B,4BACEO,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAClB,CACEO,WAAW,MAJjB,a,GAZQH,IAAMC,WCbxBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d3f54506.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nexport class GoodsList extends React.Component {\n  state = {\n    sortBy: '',\n    reversed: false,\n  }\n\n  render() {\n    const goods = [...this.props.goodsFromServer];\n\n    const reverse = () => {\n      this.setState(state => ({ reversed: !state.reversed }));\n    };\n\n    const sortAlphabetically = () => {\n      this.setState({ sortBy: 'Alphabetically' });\n    };\n\n    const reset = () => {\n      this.setState({\n        sortBy: '',\n        reversed: false,\n      });\n    };\n\n    const sortByLength = () => {\n      this.setState({ sortBy: 'ByLength' });\n    };\n\n    goods.sort(\n      (thing1, thing2) => {\n        switch (this.state.sortBy) {\n          case 'ByLength':\n            return thing1.length - thing2.length;\n\n          case 'Alphabetically':\n            return thing1.localeCompare(thing2);\n\n          default:\n            return 0;\n        }\n      },\n    );\n\n    if (this.state.reversed) {\n      goods.reverse();\n    }\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={sortAlphabetically}\n        >\n          Sort Alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n        >\n          Sort By Length\n        </button>\n        <button\n          type=\"button\"\n          onClick={reset}\n        >\n          reset\n        </button>\n        <ul>\n          {goods.map(\n            thing => <li key={thing}>{thing}</li>,\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goodsFromServer: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: false,\n  }\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      isStarted\n        ? <GoodsList goodsFromServer={goodsFromServer} />\n        : (\n          <button\n            type=\"button\"\n            onClick={() => this.setState(\n              {\n                isStarted: true,\n              },\n            )}\n          >\n            START\n          </button>\n        )\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}